@model ShopSite.ViewModels.ProductsByCategoryVM
@using System.Globalization;

@{ 
    ViewBag.Title = Model.CategoryName;
}

<h3>@ViewBag.PageSize</h3>
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <p class="lead">@Localizer["products"] <label class="text-primary">@Model.CategoryName</label>  </p>
            <p class="lead">@Localizer["results"] <label class="text-info">@Model.TotalProducts</label></p>
            <div class="list-group">

                <div class="panel-group" id="accordion-sort">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h2 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion-sort" href="#collapse-sort">
                                    @Localizer["Sort"]
                                    <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
                                </a>
                            </h2>
                        </div>
                        <div id="collapse-sort" class="panel-collapse collapse in">
                            <div class="panel-body">
                                
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-group" id="accordion-price">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h2 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion-price" href="#collapse-price">
                                    @Localizer["Price"]
                                    <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
                                </a>
                            </h2>
                        </div>
                        <div id="collapse-price" class="panel-collapse collapse in">
                            <div class="panel-body">
                                <form method="get" asp-action="ProductsByCategory">
                                    <div>
                                        <div class="noUi-target noUi-ltr noUi-horizontal noUi-background" id="slider-range"></div>
                                        <br />

                                        <input asp-for="SearchMinPrice" size="3" class="pull-left" value="@Math.Floor(Model.MinPrice)" />
                                        <input asp-for="SearchMaxPrice" size="3" class="pull-right" value="@Math.Ceiling(Model.MaxPrice)" />

                                        <input type="hidden" id="last-range-min" value="@Model.SearchMinPrice" />
                                        <input type="hidden" id="last-range-max" value="@Model.SearchMaxPrice" />

                                        <br />
                                        <br />
                                    </div>
                                    <div class="price-actions">
                                        <!--<button id="reset-price" type="button" class="btn btn-default">Reset</button>-->
                                        <button type="submit" class="btn btn-default center-block">@Localizer["Apply"]</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <!--
                <label>@Localizer["Show"]</label>
                <ul class="pagination">      
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            @Model.SearchOptions.PageSize <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li><input type="submit" asp-controller="Product" asp-action="ProductsByCategory" asp-for="SearchOptions.PageSize" value="100" /></li>
                            <li><a asp-controller="Product" asp-action="ProductsByCategory" asp-route-SearchOptions.PageSize="50">50</a></li>
                            <li><a asp-controller="Product" asp-action="ProductsByCategory" asp-route-SearchOptions.PageSize="30">30</a></li>
                            <li><a asp-controller="Product" asp-action="ProductsByCategory" asp-route-SearchOptions.PageSize="3">3</a></li>
                        </ul>
                    </div>
                </ul>
                -->
            </div>
        </div>
        
        <div class="col-md-9">
            <!--
            <div class="container">
                <div class="row">
                    <div class="col-xs-10 col-md-7 search-box">
                        @await Component.InvokeAsync("SearchPanel")
                    </div>
                </div>
            </div>
                -->
            <div class="row">
                @await Html.PartialAsync("_ShowProductsPartial", Model.Products)
            </div>
            @{

            }
            <div class="row">
                <div class="col-md-12 text-right">
                    <a asp-action="ProductsByCategory" asp-route-SearchOptions.Page=@(Model.SearchOptions.Page-1) class="btn btn-default btn">@Localizer["Previous"]</a>
                    <a asp-action="ProductsByCategory" asp-route-SearchOptions.Page=@(Model.SearchOptions.Page+1) class="btn btn-default btn">@Localizer["Next"]</a>
                </div>
            </div>

        </div>
    </div>
</div>

<script src="~/lib/nouislider/nouislider.min.js"></script>
<script>

    var stepSliderMMValues =
     [document.getElementById('SearchMinPrice'),
     document.getElementById('SearchMaxPrice')
     ];

    var startMin = @Model.SearchMinPrice.GetValueOrDefault().ToString("F0");
    var startMax = @Model.SearchMaxPrice.GetValueOrDefault().ToString("F0");

    if (!startMin) startMin = @Math.Floor(@Model.MinPrice);
    if (!startMax) startMax = @Math.Ceiling(@Model.MaxPrice);

    if (stepSliderMMValues[0].value == stepSliderMMValues[1].value)
        stepSliderMMValues[0].value = 0;

    var rangeSlider = document.getElementById('slider-range');
    noUiSlider.create(rangeSlider, {
        start: [startMin, startMax],
        connect: true,
        step: 1,
        range: {
            'min': parseInt(stepSliderMMValues[0].value),
            'max': parseInt(stepSliderMMValues[1].value)
        }
    });

    var stepSliderValueElement =
        [document.getElementById('SearchMinPrice'),
        document.getElementById('SearchMaxPrice')
        ];

    rangeSlider.noUiSlider.on('update', function (values, handle) {
        stepSliderMMValues[0].value = values[0];
        stepSliderMMValues[1].value = values[1];
    });
</script>